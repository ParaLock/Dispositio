- name: Prepare vars file from template.
  template:
    src: vars/main.j2
    dest: /tmp/vars.yaml
    lstrip_blocks: true
    trim_blocks: true
  when: operation not in ['restart']

- name: Include vars
  include_vars: "/tmp/vars.yaml"
  when: operation not in ['restart']

- name: Running before build hook
  include_tasks: "{{container_config}}/hooks/on_build.yaml"
  when: operation in ['create', 'build_image']

- name: Build podman image
  containers.podman.podman_image:
    name: "{{image_name}}"
    path: "{{container_config}}/files/"
    state: "{{image_state}}"
    build:
      format: docker
      cache: false
  when: operation in ['create', 'build_image']

- name: Manage container
  containers.podman.podman_container:
    name:  "{{container_name}}"
    image: "{{image_name}}"
    mount: "{{arguments.mount}}"
    state: "{{container_state}}"
    network: "{{arguments.network}}"
    device: "{{arguments.device}}"
    cap_add: "{{arguments.cap_add}}"
    security_opt: "{{arguments.security_opt}}"
    volume: "{{arguments.volume}}"
    cmd_args: "{{arguments.cmd_args}}"
    disable_recreate: "{{ 
        true if operation in ['start'] else false
      }}"
    interactive: true
    command: "/usr/sbin/init"
  when: operation in ['create', 'start']

- name: Running on_init hooks
  include_tasks: "{{container_config}}/hooks/on_init.yaml"
  when: operation in ['create', 'build_image']

- name: Destroy container
  containers.podman.podman_container:
    name:  "{{container_name}}"
    state: "{{container_state}}"
  when: operation in ['destroy']

- name: Stop container
  containers.podman.podman_container:
    name:  "{{container_name}}"
    state: "stopped"
  when: operation in ['restart']
  ignore_errors: true

- name: Start container
  containers.podman.podman_container:
    name:  "{{container_name}}"
    state: "started"
  when: operation in ['restart']
  ignore_errors: true

- name: Adding new container to hosts
  add_host:
    name: "{{container_name}}"
    become_ask_pass: True

    container_vars:
      container_name: "{{container_name | default('')}}"
      container_config: "{{container_config | default({})}}"
      image_name: "{{image_name | default('')}}"
      graphics: "{{graphics | default('')}}"
      sound: "{{sound | default('')}}"
      nested_containers: "{{nested_containers | default(False) }}"
      gpu: "{{gpu | default('')}}"
      copy_host_user: "{{copy_host_user | default(False)}}"
      tty: "{{tty| default(0)}}"
      operation: "{{desired_operation}}"
      container_username: "{{container_username | default('')}}"
      host_username: "{{host_username | default('')}}"

    ansible_become_flags: "-s -H"
    ansible_become_method: "sudo"
    ansible_host: "{{container_name}}"
    ansible_connection: podman
    ansible_ssh_extra_args: '-o StrictHostKeyChecking=no'

  when: operation in ['create', 'start', 'restart']

- name: Copy over host files
  block:

    - name: Copy over host user files
      copy:
        src: "{{item}}"
        dest: "{{item}}"
        mode: '0777'
      when: "'copy_host_user' in vars and operation in ['create']"
      with_items:
        - "/etc/group"
        - "/etc/passwd"
        - "/etc/shadow"

    - name: Remove host user from host files
      lineinfile:
        path: "{{item}}"
        regexp: "^{{host_username}}.+" 
        state: absent
      with_items:
      - "/etc/group"
      - "/etc/passwd"
      - "/etc/shadow"
      when: "'copy_host_user' in vars and operation in ['create']"
  
  delegate_to: "{{container_name}}"
  become_user: "root"
  become: true

- name: Running on create hook
  include_tasks:  "{{container_config}}/hooks/on_create.yaml"
  when: operation in ['create']

- name: Running on start hook
  include_tasks:  "{{container_config}}/hooks/on_start.yaml"
  when: operation in ['start']