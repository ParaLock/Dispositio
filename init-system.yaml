- hosts: "all"
  gather_facts: yes
  vars:
    kit_path: "/home/{{ansible_user}}/disposito_kit"
    
    init_service: |
      [Unit]
      Description = Disposito Service

      [Service]
      StandardError=journal
      User={{ansible_user}}
      ExecStart=ansible-playbook -i {{kit_path}}/inventory.yaml -u {{ansible_user}} {{kit_path}}/init-system.yaml

      [Install]
      WantedBy=multi-user.target

    login_service: |
      [Unit]
      Description = Login Service

      [Service]
      StandardError=journal
      User={{ansible_user}}
      ExecStart=/bin/bash --login

      [Install]
      WantedBy=multi-user.target
  
  tasks:
    
    - name: Creates kit directory
      file:
        path: "{{kit_path}}"
        state: directory
      args:
        creates: "{{kit_path}}"

    - name: Copy kit files
      copy:
        src: "{{ item }}"
        dest: "/home/{{ansible_user}}/disposito_kit/"
        owner: "{{ ansible_user }}"
        mode: 0777
      with_fileglob:
        - "{{playbook_dir}}/*.yaml"

    - name: Build run script
      
      become: true
      become_user: root
      become_method: sudo

      copy:
        content: "{{ init_service }}"
        dest: "/etc/systemd/system/disposito.service"
        mode: 0777
      args:
        creates: "/etc/systemd/system/disposito.service"

    - name: Get user id (raw)
      shell: id -u {{ ansible_user }}
      register: raw_user_id

    - name: Get user id
      set_fact: 
        user_id: "{{raw_user_id.stdout_lines[0]}}"

    - name: Create bash login if it does not exist
      command: "touch /home/{{ansible_user}}/.bash_login"
      args:
        creates: /home/{{ansible_user}}/.bash_login

    - name: Set DBUS path
      lineinfile:
        path: /home/{{ansible_user}}/.bash_login
        line: "export DBUS_SESSION_BUS_ADDRESS=unix:path=/run/user/{{user_id}}/bus"
        state: present

    - name: Disable getty
      become: true
      systemd:
        name: getty@{{item}}.service
        state: stopped
        masked: true
      ignore_errors: true
      with_items:
        - 1
        - 2
        - 3
        - 4

    - name: Disable logind
      systemd:
        name: systemd-logind.service 
        state: stopped
        masked: true

    - name: Start user service
      systemd:
        name: "user@{{ user_id }}"
        state: started


